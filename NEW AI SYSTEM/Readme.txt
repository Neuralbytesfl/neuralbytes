=====================================================
AI Chat and API Key Management System
=====================================================

Project Author: Jose Diaz Ayala
Date: 07/06/2024
License: MIT License

=====================================================
Project Structure
=====================================================
This project is organized into several directories to maintain a clean and manageable structure. Below is a description of each directory and the files contained within.

1. logs
    - ai.log: Log file that records all activities and requests to the server.
    - output.txt: Output file generated by the Python script.

2. scripts
    - apigen.py: Python script for generating API keys using SHA-256 and incorporating the current time for uniqueness.
    - bot.py: Python script that interfaces with the Node.js server to send and receive chat messages.

3. certificates
    - server.cert: SSL certificate file for HTTPS.
    - server.key: SSL key file for HTTPS.

4. config
    - config.json: Configuration file that contains API keys.
    - banip.txt: File that contains IP addresses that are banned.

5. js
    - server.js: Node.js server script that handles API key verification, rate limiting, IP banning, and request forwarding to the AI service.

6. outputs
    - output.json: JSON file that stores the conversation prompts and responses.

7. documentation
    - This directory is intended for any additional documentation related to the project.

=====================================================
How to Run the Project
=====================================================

1. Set Up Node.js Server
    - Ensure Node.js is installed on your system.
    - Navigate to the project directory.
    - Install the necessary packages using npm:
        ```bash
        npm install express axios https fs crypto express-rate-limit sanitizer
        ```
    - Start the Node.js server:
        ```bash
        node server.js
        ```

2. Generate API Keys
    - Use the `apigen.py` script to generate new API keys:
        ```bash
        python apigen.py
        ```

3. Run the Python Chat Script
    - Use the `bot.py` script to send chat messages:
        ```bash
        python bot.py "Your message here"
        ```

4. Organize Files
    - Use the provided batch script `organize_files.bat` to organize the project files into the appropriate directories:
        ```bash
        organize_files.bat
        ```

=====================================================
Configuration
=====================================================

- `config/config.json`:
    - Contains API keys for authentication.
    - Ensure that the API keys meet the required complexity (at least 8 characters, containing letters and numbers).

- `config/banip.txt`:
    - Contains a comma-separated list of banned IP addresses.
    - IPs listed here will be blocked from accessing the server.

=====================================================
Logging
=====================================================

- All server access, request details, and responses are logged in `logs/ai.log`.
- Unauthorized access attempts and rate limit exceedances are also logged for security auditing.

=====================================================
Security Features
=====================================================

- HTTPS for secure communication.
- API key verification with complexity check.
- Rate limiting to prevent abuse (exempt list included).
- IP blocking after multiple unauthorized attempts.
- Input sanitization to prevent injection attacks.

=====================================================
License
=====================================================
This project is licensed under the MIT License. You are free to use, modify, and distribute this project for commercial and non-commercial purposes.

=====================================================
Contact
=====================================================
For any questions or support, please contact Jose Diaz Ayala.
